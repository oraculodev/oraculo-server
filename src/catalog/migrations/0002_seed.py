# Generated by Django 3.2.25 on 2024-12-09 12:30

from django.db import migrations

from catalog.models.app_climate_score import AppClimateScore
from catalog.models.resource_type import ResourceType
from catalog.models.role import Role


###
# RESOURCE TYPES
###
default_resource_types = [
    "cache",
    "database",
    "queue",
    "network",
    "3rd party api",
    "storage",
    "serveless function",
    "webhook",
    ]


def resource_type_forwards_func(apps, schema_editor):
    ResourceType.objects.bulk_create(
        [
            ResourceType(name=item) for item in default_resource_types
        ])


def resource_type_reverse_func(apps, schema_editor):
    for resource_type in default_resource_types:
        ResourceType.objects.filter(name=resource_type).delete()


###
# ROLES
###
default_roles = [
    "agilist",
    "database administrator",
    "data engineer",
    "designer",
    "developer",
    "head",
    "infosec engineer",
    "manager",
    "mobile developer",
    "product manager",
    "quality assurance",
    "service desk analyst",
    "sre",
    "staff engineer",
    "tech lead",
    "ux research",
    "ux writer",
]


def role_forwards_func(apps, schema_editor):
    Role.objects.bulk_create(
        [
            Role(name=item) for item in default_roles
        ])


def role_reverse_func(apps, schema_editor):
    for role in default_roles:
        Role.objects.filter(name=role).delete()


###
# APP CLIMATE - SCORE
###
default_app_climate_score = "Total"


def app_climate_score_forwards_func(apps, schema_editor):
    AppClimateScore.objects.create(name=default_app_climate_score)


def app_climate_score_reverse_func(apps, schema_editor):
    AppClimateScore.objects.filter(name=default_app_climate_score).delete()


class Migration(migrations.Migration):
    dependencies = [
        ('catalog', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(resource_type_forwards_func, resource_type_reverse_func),
        migrations.RunPython(role_forwards_func, role_reverse_func),
        migrations.RunPython(app_climate_score_forwards_func, app_climate_score_reverse_func),
    ]
